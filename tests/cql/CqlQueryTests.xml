<?xml version="1.0" encoding="utf-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://hl7.org/fhirpath/tests" xsi:schemaLocation="http://hl7.org/fhirpath/tests ../../testSchema/testSchema.xsd" name="CqlQueryTest" reference="https://cql.hl7.org/02-authorsguide.html#queries" version="1.0">
    <group name="SimpleQueries" version="1.0">
        <test name="NonListSource" version="1.0">
            <expression>(4) l</expression>
            <output>4</output>
        </test>
        <test name="NonListSourceWithReturn" version="1.0">
            <expression>(4) l return 'Hello World'</expression>
            <output>'Hello World'</output>
        </test>
        <test name="MultiSource" version="1.0">
            <expression>from ({2, 3}) A, ({5, 6}) B</expression>
            <output>{{ A: 2, B: 5 }, { A: 2, B: 6 }, { A: 3, B: 5 }, { A: 3, B: 6 }}</output>
        </test>
    </group>
    <group name="Sort" version="1.0">
        <test name="IntegerDescending" version="1.0">
            <expression>({1, 2, 3}) l sort desc</expression>
            <output>{3, 2, 1}</output>
        </test>
        <test name="IntegerAscending" version="1.0">
            <expression>({1, 3, 2}) l sort ascending</expression>
            <output>{1, 2, 3}</output>
        </test>
        <test name="DateTimeDescending" version="1.0">
            <expression>({@2013-01-02T00:00:00.000Z, @2014-01-02T00:00:00.000Z, @2015-01-02T00:00:00.000Z}) l sort desc</expression>
            <output>{@2015-01-02T00:00:00.000Z, @2014-01-02T00:00:00.000Z, @2013-01-02T00:00:00.000Z}</output>
        </test>
        <test name="DateTimeAscending" version="1.0">
            <expression>({@2013-01-02T00:00:00.000Z, @2015-01-02T00:00:00.000Z, @2014-01-02T00:00:00.000Z}) l sort ascending</expression>
            <output>{@2013-01-02T00:00:00.000Z, @2014-01-02T00:00:00.000Z, @2015-01-02T00:00:00.000Z}</output>
        </test>
    </group>
    <group name="Aggregate" version="1.0">
        <test name="MultiplyIntegers" version="1.0">
            <expression>({1, 2, 3, 3, 4}) L aggregate A starting 1: A * L</expression>
            <output>72</output>
        </test>
        <test name="MultiplyIntegersAll" version="1.0">
            <expression>({1, 2, 3, 3, 4}) L aggregate all A starting 1: A * L</expression>
            <output>72</output>
        </test>
        <test name="MultiplyIntegersDistinct" version="1.0">
            <expression>({1, 2, 3, 3, 4}) L aggregate distinct A starting 1: A * L</expression>
            <output>24</output>
        </test>
        <test name="MultiplyIntegersNoStartingExpression" version="1.0">
            <expression>({1, 2, 3}) L aggregate A : A * L</expression>
            <output>null</output>
        </test>
        <test name="Multi-Source" version="1.0">
            <expression>from ({1, 2, 3}) B, (4) C aggregate A : A + B + C</expression>
            <output>null</output>
        </test>
    </group>
</tests>
